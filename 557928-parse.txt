--03/12/2020----------------------------------------------------- 
Lexical Tokens for a.spl 
--11:30:28.55----------------------------------------------------- 
Identifier ProgA Token: IDENTIFIER
Token: COLON
Token: CODE
Token: WRITE
Token: BRA
Character h Token: CHARCON
Token: COMMA
Character e Token: CHARCON
Token: COMMA
Character l Token: CHARCON
Token: COMMA
Character l Token: CHARCON
Token: COMMA
Character o Token: CHARCON
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: ENDP
Identifier ProgA Token: IDENTIFIER
Token: STOP
--03/12/2020----------------------------------------------------- 
Lexical Tokens for b.spl 
--11:30:59.14----------------------------------------------------- 
Identifier ProgB Token: IDENTIFIER
Token: COLON
Token: DECLARATIONS
Identifier a Token: IDENTIFIER
Token: COMMA
Identifier b Token: IDENTIFIER
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMICOLON
Identifier c Token: IDENTIFIER
Token: OF
Token: TYPE
Token: CHARACTER
Token: SEMICOLON
Identifier d Token: IDENTIFIER
Token: COMMA
Identifier e Token: IDENTIFIER
Token: OF
Token: TYPE
Token: REAL
Token: SEMICOLON
Token: CODE
Token: READ
Token: BRA
Identifier a Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: READ
Token: BRA
Identifier b Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: IF
Identifier a Token: IDENTIFIER
Token: GREATER_THAN
Identifier b Token: IDENTIFIER
Token: THEN
Token: WRITE
Token: BRA
Character A Token: CHARCON
Token: KET
Token: ELSE
Token: WRITE
Token: BRA
Character B Token: CHARCON
Token: KET
Token: ENDIF
Token: SEMICOLON
Token: NEWLINE
Token: SEMICOLON
Token: READ
Token: BRA
Identifier d Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Identifier d Token: IDENTIFIER
Token: MULTIPLY
Float 2.3 Token: FLOAT
Token: ASSIGN
Identifier e Token: IDENTIFIER
Token: SEMICOLON
Token: WRITE
Token: BRA
Identifier e Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: SEMICOLON
Token: READ
Token: BRA
Identifier c Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: WRITE
Token: BRA
Identifier c Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: ENDP
Identifier ProgB Token: IDENTIFIER
Token: STOP
--03/12/2020----------------------------------------------------- 
Lexical Tokens for c.spl 
--11:31:06.28----------------------------------------------------- 
Identifier Prog3 Token: IDENTIFIER
Token: COLON
Token: DECLARATIONS
Identifier a Token: IDENTIFIER
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMICOLON
Token: CODE
Token: FOR
Identifier a Token: IDENTIFIER
Token: IS
Number 1 Token: NUMBER
Token: BY
Number 1 Token: NUMBER
Token: TO
Number 13 Token: NUMBER
Token: DO
Token: IF
Token: NOT
Identifier a Token: IDENTIFIER
Token: EQUAL
Number 7 Token: NUMBER
Token: THEN
Token: WRITE
Token: BRA
Identifier a Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: ENDIF
Token: ENDFOR
Token: SEMICOLON
Number 0 Token: NUMBER
Token: ASSIGN
Identifier a Token: IDENTIFIER
Token: SEMICOLON
Token: DO
Identifier a Token: IDENTIFIER
Token: PLUS
Number 1 Token: NUMBER
Token: ASSIGN
Identifier a Token: IDENTIFIER
Token: SEMICOLON
Token: IF
Token: NOT
Identifier a Token: IDENTIFIER
Token: EQUAL
Number 6 Token: NUMBER
Token: AND
Identifier a Token: IDENTIFIER
Token: NOT_EQUAL_TO
Number 8 Token: NUMBER
Token: THEN
Token: WRITE
Token: BRA
Identifier a Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: ENDIF
Token: WHILE
Identifier a Token: IDENTIFIER
Token: LESS_THAN
Number 14 Token: NUMBER
Token: ENDDO
Token: SEMICOLON
Number 0 Token: NUMBER
Token: ASSIGN
Identifier a Token: IDENTIFIER
Token: SEMICOLON
Token: WHILE
Identifier a Token: IDENTIFIER
Token: LESS_THAN
Number 12 Token: NUMBER
Token: DO
Token: WRITE
Token: BRA
Identifier a Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Identifier a Token: IDENTIFIER
Token: PLUS
Number 1 Token: NUMBER
Token: ASSIGN
Identifier a Token: IDENTIFIER
Token: ENDWHILE
Token: SEMICOLON
Token: NEWLINE
Token: ENDP
Identifier Prog3 Token: IDENTIFIER
Token: STOP
--03/12/2020----------------------------------------------------- 
Lexical Tokens for d.spl 
--11:31:14.36----------------------------------------------------- 
Identifier Prog4D Token: IDENTIFIER
Token: COLON
Token: DECLARATIONS
Identifier r1 Token: IDENTIFIER
Token: COMMA
Identifier r2 Token: IDENTIFIER
Token: COMMA
Identifier r3 Token: IDENTIFIER
Token: OF
Token: TYPE
Token: REAL
Token: SEMICOLON
Token: CODE
Token: SUBTRACT
Float 2.4 Token: FLOAT
Token: ASSIGN
Identifier r1 Token: IDENTIFIER
Token: SEMICOLON
Token: SUBTRACT
Float 34.989 Token: FLOAT
Token: ASSIGN
Identifier r2 Token: IDENTIFIER
Token: SEMICOLON
Identifier r1 Token: IDENTIFIER
Token: MULTIPLY
Identifier r2 Token: IDENTIFIER
Token: DIVIDE
Float 7.4 Token: FLOAT
Token: ASSIGN
Identifier r3 Token: IDENTIFIER
Token: SEMICOLON
Token: WRITE
Token: BRA
Identifier r3 Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: SEMICOLON
Token: READ
Token: BRA
Identifier r1 Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Identifier r1 Token: IDENTIFIER
Token: PLUS
Identifier r3 Token: IDENTIFIER
Token: ASSIGN
Identifier r3 Token: IDENTIFIER
Token: SEMICOLON
Token: WRITE
Token: BRA
Identifier r3 Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: ENDP
Identifier Prog4D Token: IDENTIFIER
Token: STOP
--03/12/2020----------------------------------------------------- 
Lexical Tokens for e.spl 
--11:31:21.37----------------------------------------------------- 
Identifier ProgV Token: IDENTIFIER
Token: COLON
Token: DECLARATIONS
Identifier integer Token: IDENTIFIER
Token: COMMA
Identifier i Token: IDENTIFIER
Token: OF
Token: TYPE
Token: INTEGER
Token: SEMICOLON
Token: CODE
Token: READ
Token: BRA
Identifier integer Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: IF
Identifier integer Token: IDENTIFIER
Token: LESS_THAN_OR_EQUAL_TO
Number 5 Token: NUMBER
Token: OR
Identifier integer Token: IDENTIFIER
Token: GREATER_THAN_OR_EQUAL_TO
Number 12 Token: NUMBER
Token: THEN
Token: WRITE
Token: BRA
Identifier integer Token: IDENTIFIER
Token: KET
Token: ENDIF
Token: SEMICOLON
Token: WRITE
Token: BRA
Token: BRA
Number 36 Token: NUMBER
Token: SUBTRACT
Number 1 Token: NUMBER
Token: KET
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: SEMICOLON
Token: FOR
Identifier integer Token: IDENTIFIER
Token: IS
Token: SUBTRACT
Number 1 Token: NUMBER
Token: BY
Token: SUBTRACT
Number 1 Token: NUMBER
Token: TO
Token: SUBTRACT
Number 5 Token: NUMBER
Token: DO
Token: WRITE
Token: BRA
Identifier integer Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: ENDFOR
Token: SEMICOLON
Token: SUBTRACT
Number 1 Token: NUMBER
Token: ASSIGN
Identifier i Token: IDENTIFIER
Token: SEMICOLON
Token: FOR
Identifier integer Token: IDENTIFIER
Token: IS
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Identifier i Token: IDENTIFIER
Token: BY
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Identifier i Token: IDENTIFIER
Token: TO
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Identifier i Token: IDENTIFIER
Token: MULTIPLY
Token: BRA
Identifier i Token: IDENTIFIER
Token: PLUS
Identifier i Token: IDENTIFIER
Token: PLUS
Identifier i Token: IDENTIFIER
Token: PLUS
Identifier i Token: IDENTIFIER
Token: PLUS
Identifier i Token: IDENTIFIER
Token: KET
Token: DO
Token: WRITE
Token: BRA
Identifier integer Token: IDENTIFIER
Token: KET
Token: SEMICOLON
Token: NEWLINE
Token: ENDFOR
Token: ENDP
Identifier ProgV Token: IDENTIFIER
Token: STOP
--03/12/2020----------------------------------------------------- 
Parse debug output for a.spl 
--11:31:35.44----------------------------------------------------- 
#include <stdio.h>

int main(void) 
{

printf("h""e""l""l""o");
printf("\n");


}
--03/12/2020----------------------------------------------------- 
Parse debug output for b.spl 
--11:31:44.53----------------------------------------------------- 
#include <stdio.h>

int main(void) 
{

int a,b;
char c;
float d,e;

scanf(" %d",&a);

scanf(" %d",&b);
if (a >b )
{
printf("A");
}
else
{
printf("B");
}
printf("\n");

scanf(" %f",&d);
e = d *2.3 ;

printf("%.2f",e );
printf("\n");

scanf(" %c",&c);

printf("%c",c );
printf("\n");

}
--03/12/2020----------------------------------------------------- 
Parse debug output for c.spl 
--11:31:53.06----------------------------------------------------- 
#include <stdio.h>

int main(void) 
{

int a;
register int _by, _sign;for (a = 1; _by = 1, _sign=(_by == 0 ? 1 : _by/abs(_by)), (a-(13))*_sign <= 0 ;a+= _by)
{if (!(a ==7))
{
printf("%d",a );
printf("\n");
}

}
a = 0;
do
{a = a +1;
if (!(a ==6 && a !=8))
{
printf("%d",a );
printf("\n");
}
} while(a <14);
a = 0;
while (a <12) 
{

printf("%d",a );
a = a +1;

}
printf("\n");

}
--03/12/2020----------------------------------------------------- 
Parse debug output for d.spl 
--11:32:02.65----------------------------------------------------- 
#include <stdio.h>

int main(void) 
{

float r1,r2,r3;
r1 = -2.4 ;
r2 = -34.989 ;
r3 = r1 *r2 /7.4 ;

printf("%.2f",r3 );
printf("\n");

scanf(" %f",&r1);
r3 = r1 +r3 ;

printf("%.2f",r3 );
printf("\n");

}
--03/12/2020----------------------------------------------------- 
Parse debug output for e.spl 
--11:32:12.51----------------------------------------------------- 
#include <stdio.h>

int main(void) 
{

int integer,i;

scanf(" %d",&integer);
if (integer <=5 || integer >=12)
{
printf("%d",integer );
}

printf("%d",36-1);
printf("\n");
register int _by, _sign;for (integer = -1 ; _by = -1 , _sign=(_by == 0 ? 1 : _by/abs(_by)), (integer-(-5 ))*_sign <= 0 ;integer+= _by)
{
printf("%d",integer );
printf("\n");

}
i = -1 ;
for (integer = i *i *i ; _by = i *i *i *i *i , _sign=(_by == 0 ? 1 : _by/abs(_by)), (integer-(i *i *(i +i +i +i +i )))*_sign <= 0 ;integer+= _by)
{
printf("%d",integer );
printf("\n");

}

}
